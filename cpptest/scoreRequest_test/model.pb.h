// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: model.proto

#ifndef PROTOBUF_model_2eproto__INCLUDED
#define PROTOBUF_model_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "feature.pb.h"  // IWYU pragma: export
// @@protoc_insertion_point(includes)

namespace protobuf_model_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsScoreRequestImpl();
void InitDefaultsScoreRequest();
void InitDefaultsScoreResponse_ScoreResultEntry_DoNotUseImpl();
void InitDefaultsScoreResponse_ScoreResultEntry_DoNotUse();
void InitDefaultsScoreResponseImpl();
void InitDefaultsScoreResponse();
inline void InitDefaults() {
  InitDefaultsScoreRequest();
  InitDefaultsScoreResponse_ScoreResultEntry_DoNotUse();
  InitDefaultsScoreResponse();
}
}  // namespace protobuf_model_2eproto
namespace predictor {
namespace model {
class ScoreRequest;
class ScoreRequestDefaultTypeInternal;
extern ScoreRequestDefaultTypeInternal _ScoreRequest_default_instance_;
class ScoreResponse;
class ScoreResponseDefaultTypeInternal;
extern ScoreResponseDefaultTypeInternal _ScoreResponse_default_instance_;
class ScoreResponse_ScoreResultEntry_DoNotUse;
class ScoreResponse_ScoreResultEntry_DoNotUseDefaultTypeInternal;
extern ScoreResponse_ScoreResultEntry_DoNotUseDefaultTypeInternal _ScoreResponse_ScoreResultEntry_DoNotUse_default_instance_;
}  // namespace model
}  // namespace predictor
namespace predictor {
namespace model {

// ===================================================================

class ScoreRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:predictor.model.ScoreRequest) */ {
 public:
  ScoreRequest();
  virtual ~ScoreRequest();

  ScoreRequest(const ScoreRequest& from);

  inline ScoreRequest& operator=(const ScoreRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScoreRequest(ScoreRequest&& from) noexcept
    : ScoreRequest() {
    *this = ::std::move(from);
  }

  inline ScoreRequest& operator=(ScoreRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScoreRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScoreRequest* internal_default_instance() {
    return reinterpret_cast<const ScoreRequest*>(
               &_ScoreRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ScoreRequest* other);
  friend void swap(ScoreRequest& a, ScoreRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScoreRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ScoreRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScoreRequest& from);
  void MergeFrom(const ScoreRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScoreRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string app_id = 1;
  void clear_app_id();
  static const int kAppIdFieldNumber = 1;
  const ::std::string& app_id() const;
  void set_app_id(const ::std::string& value);
  #if LANG_CXX11
  void set_app_id(::std::string&& value);
  #endif
  void set_app_id(const char* value);
  void set_app_id(const char* value, size_t size);
  ::std::string* mutable_app_id();
  ::std::string* release_app_id();
  void set_allocated_app_id(::std::string* app_id);

  // string req_id = 2;
  void clear_req_id();
  static const int kReqIdFieldNumber = 2;
  const ::std::string& req_id() const;
  void set_req_id(const ::std::string& value);
  #if LANG_CXX11
  void set_req_id(::std::string&& value);
  #endif
  void set_req_id(const char* value);
  void set_req_id(const char* value, size_t size);
  ::std::string* mutable_req_id();
  ::std::string* release_req_id();
  void set_allocated_req_id(::std::string* req_id);

  // string uid = 3;
  void clear_uid();
  static const int kUidFieldNumber = 3;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  #if LANG_CXX11
  void set_uid(::std::string&& value);
  #endif
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // .predictor.feature.framework.FeatureInfo feature_info = 6;
  bool has_feature_info() const;
  void clear_feature_info();
  static const int kFeatureInfoFieldNumber = 6;
  const ::predictor::feature::framework::FeatureInfo& feature_info() const;
  ::predictor::feature::framework::FeatureInfo* release_feature_info();
  ::predictor::feature::framework::FeatureInfo* mutable_feature_info();
  void set_allocated_feature_info(::predictor::feature::framework::FeatureInfo* feature_info);

  // uint64 req_time = 4;
  void clear_req_time();
  static const int kReqTimeFieldNumber = 4;
  ::google::protobuf::uint64 req_time() const;
  void set_req_time(::google::protobuf::uint64 value);

  // int32 model_id = 5;
  void clear_model_id();
  static const int kModelIdFieldNumber = 5;
  ::google::protobuf::int32 model_id() const;
  void set_model_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:predictor.model.ScoreRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr app_id_;
  ::google::protobuf::internal::ArenaStringPtr req_id_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  ::predictor::feature::framework::FeatureInfo* feature_info_;
  ::google::protobuf::uint64 req_time_;
  ::google::protobuf::int32 model_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_model_2eproto::TableStruct;
  friend void ::protobuf_model_2eproto::InitDefaultsScoreRequestImpl();
};
// -------------------------------------------------------------------

class ScoreResponse_ScoreResultEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<ScoreResponse_ScoreResultEntry_DoNotUse, 
    ::std::string, double,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<ScoreResponse_ScoreResultEntry_DoNotUse, 
    ::std::string, double,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
    0 > SuperType;
  ScoreResponse_ScoreResultEntry_DoNotUse();
  ScoreResponse_ScoreResultEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const ScoreResponse_ScoreResultEntry_DoNotUse& other);
  static const ScoreResponse_ScoreResultEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ScoreResponse_ScoreResultEntry_DoNotUse*>(&_ScoreResponse_ScoreResultEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class ScoreResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:predictor.model.ScoreResponse) */ {
 public:
  ScoreResponse();
  virtual ~ScoreResponse();

  ScoreResponse(const ScoreResponse& from);

  inline ScoreResponse& operator=(const ScoreResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScoreResponse(ScoreResponse&& from) noexcept
    : ScoreResponse() {
    *this = ::std::move(from);
  }

  inline ScoreResponse& operator=(ScoreResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScoreResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScoreResponse* internal_default_instance() {
    return reinterpret_cast<const ScoreResponse*>(
               &_ScoreResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ScoreResponse* other);
  friend void swap(ScoreResponse& a, ScoreResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScoreResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ScoreResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScoreResponse& from);
  void MergeFrom(const ScoreResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScoreResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, double> score_result = 5;
  int score_result_size() const;
  void clear_score_result();
  static const int kScoreResultFieldNumber = 5;
  const ::google::protobuf::Map< ::std::string, double >&
      score_result() const;
  ::google::protobuf::Map< ::std::string, double >*
      mutable_score_result();

  // string app_id = 1;
  void clear_app_id();
  static const int kAppIdFieldNumber = 1;
  const ::std::string& app_id() const;
  void set_app_id(const ::std::string& value);
  #if LANG_CXX11
  void set_app_id(::std::string&& value);
  #endif
  void set_app_id(const char* value);
  void set_app_id(const char* value, size_t size);
  ::std::string* mutable_app_id();
  ::std::string* release_app_id();
  void set_allocated_app_id(::std::string* app_id);

  // string req_id = 2;
  void clear_req_id();
  static const int kReqIdFieldNumber = 2;
  const ::std::string& req_id() const;
  void set_req_id(const ::std::string& value);
  #if LANG_CXX11
  void set_req_id(::std::string&& value);
  #endif
  void set_req_id(const char* value);
  void set_req_id(const char* value, size_t size);
  ::std::string* mutable_req_id();
  ::std::string* release_req_id();
  void set_allocated_req_id(::std::string* req_id);

  // string uid = 3;
  void clear_uid();
  static const int kUidFieldNumber = 3;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  #if LANG_CXX11
  void set_uid(::std::string&& value);
  #endif
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // uint64 resp_time = 4;
  void clear_resp_time();
  static const int kRespTimeFieldNumber = 4;
  ::google::protobuf::uint64 resp_time() const;
  void set_resp_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:predictor.model.ScoreResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      ScoreResponse_ScoreResultEntry_DoNotUse,
      ::std::string, double,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
      0 > score_result_;
  ::google::protobuf::internal::ArenaStringPtr app_id_;
  ::google::protobuf::internal::ArenaStringPtr req_id_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  ::google::protobuf::uint64 resp_time_;
  mutable int _cached_size_;
  friend struct ::protobuf_model_2eproto::TableStruct;
  friend void ::protobuf_model_2eproto::InitDefaultsScoreResponseImpl();
};
// ===================================================================

class ScoreService_Stub;

class ScoreService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline ScoreService() {};
 public:
  virtual ~ScoreService();

  typedef ScoreService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void getScore(::google::protobuf::RpcController* controller,
                       const ::predictor::model::ScoreRequest* request,
                       ::predictor::model::ScoreResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ScoreService);
};

class ScoreService_Stub : public ScoreService {
 public:
  ScoreService_Stub(::google::protobuf::RpcChannel* channel);
  ScoreService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~ScoreService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements ScoreService ------------------------------------------

  void getScore(::google::protobuf::RpcController* controller,
                       const ::predictor::model::ScoreRequest* request,
                       ::predictor::model::ScoreResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ScoreService_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ScoreRequest

// string app_id = 1;
inline void ScoreRequest::clear_app_id() {
  app_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ScoreRequest::app_id() const {
  // @@protoc_insertion_point(field_get:predictor.model.ScoreRequest.app_id)
  return app_id_.GetNoArena();
}
inline void ScoreRequest::set_app_id(const ::std::string& value) {
  
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:predictor.model.ScoreRequest.app_id)
}
#if LANG_CXX11
inline void ScoreRequest::set_app_id(::std::string&& value) {
  
  app_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:predictor.model.ScoreRequest.app_id)
}
#endif
inline void ScoreRequest::set_app_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:predictor.model.ScoreRequest.app_id)
}
inline void ScoreRequest::set_app_id(const char* value, size_t size) {
  
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:predictor.model.ScoreRequest.app_id)
}
inline ::std::string* ScoreRequest::mutable_app_id() {
  
  // @@protoc_insertion_point(field_mutable:predictor.model.ScoreRequest.app_id)
  return app_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScoreRequest::release_app_id() {
  // @@protoc_insertion_point(field_release:predictor.model.ScoreRequest.app_id)
  
  return app_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScoreRequest::set_allocated_app_id(::std::string* app_id) {
  if (app_id != NULL) {
    
  } else {
    
  }
  app_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_id);
  // @@protoc_insertion_point(field_set_allocated:predictor.model.ScoreRequest.app_id)
}

// string req_id = 2;
inline void ScoreRequest::clear_req_id() {
  req_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ScoreRequest::req_id() const {
  // @@protoc_insertion_point(field_get:predictor.model.ScoreRequest.req_id)
  return req_id_.GetNoArena();
}
inline void ScoreRequest::set_req_id(const ::std::string& value) {
  
  req_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:predictor.model.ScoreRequest.req_id)
}
#if LANG_CXX11
inline void ScoreRequest::set_req_id(::std::string&& value) {
  
  req_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:predictor.model.ScoreRequest.req_id)
}
#endif
inline void ScoreRequest::set_req_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  req_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:predictor.model.ScoreRequest.req_id)
}
inline void ScoreRequest::set_req_id(const char* value, size_t size) {
  
  req_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:predictor.model.ScoreRequest.req_id)
}
inline ::std::string* ScoreRequest::mutable_req_id() {
  
  // @@protoc_insertion_point(field_mutable:predictor.model.ScoreRequest.req_id)
  return req_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScoreRequest::release_req_id() {
  // @@protoc_insertion_point(field_release:predictor.model.ScoreRequest.req_id)
  
  return req_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScoreRequest::set_allocated_req_id(::std::string* req_id) {
  if (req_id != NULL) {
    
  } else {
    
  }
  req_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), req_id);
  // @@protoc_insertion_point(field_set_allocated:predictor.model.ScoreRequest.req_id)
}

// string uid = 3;
inline void ScoreRequest::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ScoreRequest::uid() const {
  // @@protoc_insertion_point(field_get:predictor.model.ScoreRequest.uid)
  return uid_.GetNoArena();
}
inline void ScoreRequest::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:predictor.model.ScoreRequest.uid)
}
#if LANG_CXX11
inline void ScoreRequest::set_uid(::std::string&& value) {
  
  uid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:predictor.model.ScoreRequest.uid)
}
#endif
inline void ScoreRequest::set_uid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:predictor.model.ScoreRequest.uid)
}
inline void ScoreRequest::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:predictor.model.ScoreRequest.uid)
}
inline ::std::string* ScoreRequest::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:predictor.model.ScoreRequest.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScoreRequest::release_uid() {
  // @@protoc_insertion_point(field_release:predictor.model.ScoreRequest.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScoreRequest::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:predictor.model.ScoreRequest.uid)
}

// uint64 req_time = 4;
inline void ScoreRequest::clear_req_time() {
  req_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ScoreRequest::req_time() const {
  // @@protoc_insertion_point(field_get:predictor.model.ScoreRequest.req_time)
  return req_time_;
}
inline void ScoreRequest::set_req_time(::google::protobuf::uint64 value) {
  
  req_time_ = value;
  // @@protoc_insertion_point(field_set:predictor.model.ScoreRequest.req_time)
}

// int32 model_id = 5;
inline void ScoreRequest::clear_model_id() {
  model_id_ = 0;
}
inline ::google::protobuf::int32 ScoreRequest::model_id() const {
  // @@protoc_insertion_point(field_get:predictor.model.ScoreRequest.model_id)
  return model_id_;
}
inline void ScoreRequest::set_model_id(::google::protobuf::int32 value) {
  
  model_id_ = value;
  // @@protoc_insertion_point(field_set:predictor.model.ScoreRequest.model_id)
}

// .predictor.feature.framework.FeatureInfo feature_info = 6;
inline bool ScoreRequest::has_feature_info() const {
  return this != internal_default_instance() && feature_info_ != NULL;
}
inline const ::predictor::feature::framework::FeatureInfo& ScoreRequest::feature_info() const {
  const ::predictor::feature::framework::FeatureInfo* p = feature_info_;
  // @@protoc_insertion_point(field_get:predictor.model.ScoreRequest.feature_info)
  return p != NULL ? *p : *reinterpret_cast<const ::predictor::feature::framework::FeatureInfo*>(
      &::predictor::feature::framework::_FeatureInfo_default_instance_);
}
inline ::predictor::feature::framework::FeatureInfo* ScoreRequest::release_feature_info() {
  // @@protoc_insertion_point(field_release:predictor.model.ScoreRequest.feature_info)
  
  ::predictor::feature::framework::FeatureInfo* temp = feature_info_;
  feature_info_ = NULL;
  return temp;
}
inline ::predictor::feature::framework::FeatureInfo* ScoreRequest::mutable_feature_info() {
  
  if (feature_info_ == NULL) {
    feature_info_ = new ::predictor::feature::framework::FeatureInfo;
  }
  // @@protoc_insertion_point(field_mutable:predictor.model.ScoreRequest.feature_info)
  return feature_info_;
}
inline void ScoreRequest::set_allocated_feature_info(::predictor::feature::framework::FeatureInfo* feature_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(feature_info_);
  }
  if (feature_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      feature_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, feature_info, submessage_arena);
    }
    
  } else {
    
  }
  feature_info_ = feature_info;
  // @@protoc_insertion_point(field_set_allocated:predictor.model.ScoreRequest.feature_info)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ScoreResponse

// string app_id = 1;
inline void ScoreResponse::clear_app_id() {
  app_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ScoreResponse::app_id() const {
  // @@protoc_insertion_point(field_get:predictor.model.ScoreResponse.app_id)
  return app_id_.GetNoArena();
}
inline void ScoreResponse::set_app_id(const ::std::string& value) {
  
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:predictor.model.ScoreResponse.app_id)
}
#if LANG_CXX11
inline void ScoreResponse::set_app_id(::std::string&& value) {
  
  app_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:predictor.model.ScoreResponse.app_id)
}
#endif
inline void ScoreResponse::set_app_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:predictor.model.ScoreResponse.app_id)
}
inline void ScoreResponse::set_app_id(const char* value, size_t size) {
  
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:predictor.model.ScoreResponse.app_id)
}
inline ::std::string* ScoreResponse::mutable_app_id() {
  
  // @@protoc_insertion_point(field_mutable:predictor.model.ScoreResponse.app_id)
  return app_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScoreResponse::release_app_id() {
  // @@protoc_insertion_point(field_release:predictor.model.ScoreResponse.app_id)
  
  return app_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScoreResponse::set_allocated_app_id(::std::string* app_id) {
  if (app_id != NULL) {
    
  } else {
    
  }
  app_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_id);
  // @@protoc_insertion_point(field_set_allocated:predictor.model.ScoreResponse.app_id)
}

// string req_id = 2;
inline void ScoreResponse::clear_req_id() {
  req_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ScoreResponse::req_id() const {
  // @@protoc_insertion_point(field_get:predictor.model.ScoreResponse.req_id)
  return req_id_.GetNoArena();
}
inline void ScoreResponse::set_req_id(const ::std::string& value) {
  
  req_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:predictor.model.ScoreResponse.req_id)
}
#if LANG_CXX11
inline void ScoreResponse::set_req_id(::std::string&& value) {
  
  req_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:predictor.model.ScoreResponse.req_id)
}
#endif
inline void ScoreResponse::set_req_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  req_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:predictor.model.ScoreResponse.req_id)
}
inline void ScoreResponse::set_req_id(const char* value, size_t size) {
  
  req_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:predictor.model.ScoreResponse.req_id)
}
inline ::std::string* ScoreResponse::mutable_req_id() {
  
  // @@protoc_insertion_point(field_mutable:predictor.model.ScoreResponse.req_id)
  return req_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScoreResponse::release_req_id() {
  // @@protoc_insertion_point(field_release:predictor.model.ScoreResponse.req_id)
  
  return req_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScoreResponse::set_allocated_req_id(::std::string* req_id) {
  if (req_id != NULL) {
    
  } else {
    
  }
  req_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), req_id);
  // @@protoc_insertion_point(field_set_allocated:predictor.model.ScoreResponse.req_id)
}

// string uid = 3;
inline void ScoreResponse::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ScoreResponse::uid() const {
  // @@protoc_insertion_point(field_get:predictor.model.ScoreResponse.uid)
  return uid_.GetNoArena();
}
inline void ScoreResponse::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:predictor.model.ScoreResponse.uid)
}
#if LANG_CXX11
inline void ScoreResponse::set_uid(::std::string&& value) {
  
  uid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:predictor.model.ScoreResponse.uid)
}
#endif
inline void ScoreResponse::set_uid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:predictor.model.ScoreResponse.uid)
}
inline void ScoreResponse::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:predictor.model.ScoreResponse.uid)
}
inline ::std::string* ScoreResponse::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:predictor.model.ScoreResponse.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScoreResponse::release_uid() {
  // @@protoc_insertion_point(field_release:predictor.model.ScoreResponse.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScoreResponse::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:predictor.model.ScoreResponse.uid)
}

// uint64 resp_time = 4;
inline void ScoreResponse::clear_resp_time() {
  resp_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ScoreResponse::resp_time() const {
  // @@protoc_insertion_point(field_get:predictor.model.ScoreResponse.resp_time)
  return resp_time_;
}
inline void ScoreResponse::set_resp_time(::google::protobuf::uint64 value) {
  
  resp_time_ = value;
  // @@protoc_insertion_point(field_set:predictor.model.ScoreResponse.resp_time)
}

// map<string, double> score_result = 5;
inline int ScoreResponse::score_result_size() const {
  return score_result_.size();
}
inline void ScoreResponse::clear_score_result() {
  score_result_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, double >&
ScoreResponse::score_result() const {
  // @@protoc_insertion_point(field_map:predictor.model.ScoreResponse.score_result)
  return score_result_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, double >*
ScoreResponse::mutable_score_result() {
  // @@protoc_insertion_point(field_mutable_map:predictor.model.ScoreResponse.score_result)
  return score_result_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace model
}  // namespace predictor

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_model_2eproto__INCLUDED
